name: Build Mobile Apps (Android & iOS)

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'App version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-android-aab:
    name: Build Android AAB
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Create React Native project
      run: |
        mkdir -p mobile-app
        cd mobile-app
        
        # Create package.json
        cat > package.json << 'EOF'
        {
          "name": "RentCredit",
          "version": "${{ github.event.inputs.release_version }}",
          "private": true,
          "scripts": {
            "android": "react-native run-android",
            "ios": "react-native run-ios",
            "start": "react-native start"
          },
          "dependencies": {
            "react": "18.2.0",
            "react-native": "0.73.0",
            "react-native-webview": "^13.6.3"
          },
          "devDependencies": {
            "@babel/core": "^7.20.0",
            "@babel/preset-env": "^7.20.0",
            "@babel/runtime": "^7.20.0",
            "@react-native/babel-preset": "^0.73.18",
            "@react-native/metro-config": "^0.73.2",
            "metro-react-native-babel-preset": "^0.73.7"
          }
        }
        EOF
        
        npm install --legacy-peer-deps
        npx react-native init RentCreditApp --template react-native-template-typescript --skip-install --directory .
        
    - name: Create app component
      run: |
        cd mobile-app
        mkdir -p src
        cat > src/App.tsx << 'EOF'
        import React from 'react';
        import { SafeAreaView, StatusBar } from 'react-native';
        import WebView from 'react-native-webview';

        const App = () => {
          return (
            <SafeAreaView style={{ flex: 1 }}>
              <StatusBar barStyle="dark-content" backgroundColor="#FFFFFF" />
              <WebView
                source={{ uri: 'https://rentcredit.us' }}
                style={{ flex: 1 }}
                startInLoadingState={true}
                javaScriptEnabled={true}
                domStorageEnabled={true}
                allowsInlineMediaPlayback={true}
                mediaPlaybackRequiresUserAction={false}
              />
            </SafeAreaView>
          );
        };

        export default App;
        EOF
        
    - name: Configure Android
      run: |
        cd mobile-app/android
        
        # Update app/build.gradle
        cat > app/build.gradle << 'EOF'
        apply plugin: "com.android.application"
        apply plugin: "com.facebook.react"
        
        android {
            namespace "com.rentcredit.app"
            compileSdkVersion 34
            
            defaultConfig {
                applicationId "com.rentcredit.app"
                minSdkVersion 21
                targetSdkVersion 34
                versionCode 1
                versionName "${{ github.event.inputs.release_version }}"
            }
            
            signingConfigs {
                release {
                    storeFile file("release.keystore")
                    storePassword "rentcredit2025"
                    keyAlias "rentcredit"
                    keyPassword "rentcredit2025"
                }
            }
            
            buildTypes {
                release {
                    minifyEnabled true
                    signingConfig signingConfigs.release
                }
            }
            
            bundle {
                language { enableSplit = true }
                density { enableSplit = true }
                abi { enableSplit = true }
            }
        }
        
        dependencies {
            implementation("com.facebook.react:react-android")
            implementation("com.facebook.react:hermes-android")
        }
        EOF
        
    - name: Generate Android keystore
      run: |
        cd mobile-app/android/app
        keytool -genkeypair -v \
          -keystore release.keystore \
          -alias rentcredit \
          -keyalg RSA -keysize 2048 -validity 10000 \
          -storepass rentcredit2025 -keypass rentcredit2025 \
          -dname "CN=RentCredit, OU=Development, O=RentCredit, L=San Francisco, ST=CA, C=US"
          
    - name: Build Android AAB
      run: |
        cd mobile-app/android
        ./gradlew clean bundleRelease
        
    - name: Upload Android AAB
      uses: actions/upload-artifact@v4
      with:
        name: RentCredit-${{ github.event.inputs.release_version }}-Android.aab
        path: mobile-app/android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30

  build-ios-ipa:
    name: Build iOS IPA
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        
    - name: Create React Native project
      run: |
        mkdir -p mobile-app
        cd mobile-app
        
        # Create package.json
        cat > package.json << 'EOF'
        {
          "name": "RentCredit",
          "version": "${{ github.event.inputs.release_version }}",
          "private": true,
          "scripts": {
            "ios": "react-native run-ios",
            "start": "react-native start"
          },
          "dependencies": {
            "react": "18.2.0",
            "react-native": "0.73.0",
            "react-native-webview": "^13.6.3"
          }
        }
        EOF
        
        npm install --legacy-peer-deps
        npx react-native init RentCreditApp --template react-native-template-typescript --skip-install --directory .
        
    - name: Configure iOS
      run: |
        cd mobile-app/ios
        
        # Update Info.plist
        cat > RentCreditApp/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>CFBundleDevelopmentRegion</key>
          <string>en</string>
          <key>CFBundleDisplayName</key>
          <string>RentCredit</string>
          <key>CFBundleExecutable</key>
          <string>$(EXECUTABLE_NAME)</string>
          <key>CFBundleIdentifier</key>
          <string>com.rentcredit.app</string>
          <key>CFBundleInfoDictionaryVersion</key>
          <string>6.0</string>
          <key>CFBundleName</key>
          <string>$(PRODUCT_NAME)</string>
          <key>CFBundlePackageType</key>
          <string>APPL</string>
          <key>CFBundleShortVersionString</key>
          <string>${{ github.event.inputs.release_version }}</string>
          <key>CFBundleSignature</key>
          <string>????</string>
          <key>CFBundleVersion</key>
          <string>1</string>
          <key>LSRequiresIPhoneOS</key>
          <true/>
          <key>NSAppTransportSecurity</key>
          <dict>
            <key>NSAllowsArbitraryLoads</key>
            <true/>
          </dict>
          <key>UILaunchStoryboardName</key>
          <string>LaunchScreen</string>
          <key>UIRequiredDeviceCapabilities</key>
          <array>
            <string>armv7</string>
          </array>
          <key>UISupportedInterfaceOrientations</key>
          <array>
            <string>UIInterfaceOrientationPortrait</string>
            <string>UIInterfaceOrientationLandscapeLeft</string>
            <string>UIInterfaceOrientationLandscapeRight</string>
          </array>
        </dict>
        </plist>
        EOF
        
        pod install
        
    - name: Build iOS IPA
      run: |
        cd mobile-app/ios
        
        # Build the app
        xcodebuild -workspace RentCreditApp.xcworkspace \
          -scheme RentCreditApp \
          -configuration Release \
          -derivedDataPath build \
          -allowProvisioningUpdates \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
        # Create IPA
        mkdir -p Payload
        cp -r build/Build/Products/Release-iphoneos/RentCreditApp.app Payload/
        zip -r RentCredit.ipa Payload
        
    - name: Upload iOS IPA
      uses: actions/upload-artifact@v4
      with:
        name: RentCredit-${{ github.event.inputs.release_version }}-iOS.ipa
        path: mobile-app/ios/RentCredit.ipa
        retention-days: 30
        
  upload-instructions:
    name: Generate Instructions
    runs-on: ubuntu-latest
    needs: [build-android-aab, build-ios-ipa]
    
    steps:
    - name: Create upload instructions
      run: |
        cat > upload-instructions.md << 'EOF'
        # App Store Upload Instructions
        
        ## Android - Google Play Store
        
        1. Download: RentCredit-${{ github.event.inputs.release_version }}-Android.aab
        2. Go to [Google Play Console](https://play.google.com/console)
        3. Select your app → Release → Production
        4. Create new release → Upload AAB
        5. Fill release notes → Review → Rollout
        
        ## iOS - Apple App Store
        
        1. Download: RentCredit-${{ github.event.inputs.release_version }}-iOS.ipa
        2. Open Xcode → Window → Organizer
        3. Or use [Transporter app](https://apps.apple.com/app/transporter/id1450874784)
        4. Upload IPA to App Store Connect
        5. Go to [App Store Connect](https://appstoreconnect.apple.com)
        6. Select app → TestFlight or App Store → Submit
        
        ## Important Notes
        
        - Android: AAB is signed with temporary keystore
        - iOS: IPA is unsigned (requires proper certificates for App Store)
        - Both apps load: https://rentcredit.us
        EOF
        
    - name: Upload instructions
      uses: actions/upload-artifact@v4
      with:
        name: upload-instructions
        path: upload-instructions.md
