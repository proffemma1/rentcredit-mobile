name: Build Mobile Apps (Simple)

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'App version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-android-aab:
    name: Build Android AAB
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Create Android WebView App
      run: |
        # Create Android project structure
        mkdir -p android-app/app/src/main/java/com/rentcredit/app
        mkdir -p android-app/app/src/main/res/layout
        mkdir -p android-app/app/src/main/res/values
        mkdir -p android-app/app/src/main/res/mipmap-hdpi
        mkdir -p android-app/app/src/main/res/mipmap-mdpi
        mkdir -p android-app/app/src/main/res/mipmap-xhdpi
        mkdir -p android-app/app/src/main/res/mipmap-xxhdpi
        mkdir -p android-app/app/src/main/res/mipmap-xxxhdpi
        
        # Create build.gradle (project level)
        cat > android-app/build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.1.1'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        EOF
        
        # Create settings.gradle
        cat > android-app/settings.gradle << 'EOF'
        include ':app'
        EOF
        
        # Create gradle.properties
        cat > android-app/gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx1536m
        android.useAndroidX=true
        android.enableJetifier=true
        EOF
        
        # Create build.gradle (app level)
        cat > android-app/app/build.gradle << 'EOF'
        apply plugin: 'com.android.application'
        
        android {
            namespace 'com.rentcredit.app'
            compileSdk 34
            
            defaultConfig {
                applicationId "com.rentcredit.app"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "${{ github.event.inputs.release_version }}"
            }
            
            signingConfigs {
                release {
                    storeFile file("keystore.jks")
                    storePassword "rentcredit2025"
                    keyAlias "rentcredit"
                    keyPassword "rentcredit2025"
                }
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    signingConfig signingConfigs.release
                }
            }
            
            bundle {
                language {
                    enableSplit = true
                }
                density {
                    enableSplit = true
                }
                abi {
                    enableSplit = true
                }
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'androidx.webkit:webkit:1.7.0'
        }
        EOF
        
        # Create MainActivity.java
        cat > android-app/app/src/main/java/com/rentcredit/app/MainActivity.java << 'EOF'
        package com.rentcredit.app;
        
        import android.os.Bundle;
        import android.webkit.WebSettings;
        import android.webkit.WebView;
        import android.webkit.WebViewClient;
        import androidx.appcompat.app.AppCompatActivity;
        
        public class MainActivity extends AppCompatActivity {
            private WebView webView;
            
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                webView = new WebView(this);
                setContentView(webView);
                
                WebSettings webSettings = webView.getSettings();
                webSettings.setJavaScriptEnabled(true);
                webSettings.setDomStorageEnabled(true);
                webSettings.setLoadWithOverviewMode(true);
                webSettings.setUseWideViewPort(true);
                
                webView.setWebViewClient(new WebViewClient());
                webView.loadUrl("https://rentcredit.us");
            }
            
            @Override
            public void onBackPressed() {
                if (webView.canGoBack()) {
                    webView.goBack();
                } else {
                    super.onBackPressed();
                }
            }
        }
        EOF
        
        # Create AndroidManifest.xml
        cat > android-app/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="RentCredit"
                android:theme="@style/Theme.AppCompat.Light.NoActionBar">
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:configChanges="orientation|keyboardHidden|screenSize">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # Create a simple icon (purple square with RC)
        echo "Creating app icon..."
        convert -size 192x192 xc:'#8B5CF6' \
          -fill white -pointsize 96 -gravity center \
          -annotate +0+0 'RC' \
          android-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png || echo "Icon generation skipped"
        
        # Copy icon to all sizes (simplified)
        cp android-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png android-app/app/src/main/res/mipmap-xxhdpi/ic_launcher.png 2>/dev/null || true
        cp android-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png android-app/app/src/main/res/mipmap-xhdpi/ic_launcher.png 2>/dev/null || true
        cp android-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png android-app/app/src/main/res/mipmap-hdpi/ic_launcher.png 2>/dev/null || true
        cp android-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png android-app/app/src/main/res/mipmap-mdpi/ic_launcher.png 2>/dev/null || true
        
    - name: Setup Gradle
      run: |
        cd android-app
        
        # Create gradle wrapper
        cat > gradlew << 'EOF'
        #!/bin/sh
        exec "$(dirname "$0")/gradle/wrapper/gradle-wrapper.jar" "$@"
        EOF
        chmod +x gradlew
        
        # Download gradle wrapper
        mkdir -p gradle/wrapper
        wget -q https://services.gradle.org/distributions/gradle-8.1.1-bin.zip -O gradle-wrapper.zip
        unzip -q gradle-wrapper.zip
        mv gradle-8.1.1/lib/gradle-wrapper-8.1.1.jar gradle/wrapper/gradle-wrapper.jar
        rm -rf gradle-8.1.1 gradle-wrapper.zip
        
        # Create gradle-wrapper.properties
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.1.1-all.zip
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        zipStorePath=wrapper/dists
        zipStoreBase=GRADLE_USER_HOME
        EOF
        
    - name: Generate signing keystore
      run: |
        cd android-app/app
        keytool -genkeypair -v \
          -keystore keystore.jks \
          -alias rentcredit \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -storepass rentcredit2025 \
          -keypass rentcredit2025 \
          -dname "CN=RentCredit, OU=Development, O=RentCredit, L=San Francisco, ST=CA, C=US"
          
    - name: Build AAB
      run: |
        cd android-app
        # Use gradle directly since wrapper might have issues
        gradle bundle || ./gradlew bundle || gradle bundleRelease || ./gradlew bundleRelease
        
        # Find the AAB file
        find . -name "*.aab" -type f
        
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: RentCredit-${{ github.event.inputs.release_version }}.aab
        path: android-app/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30
        
    - name: Create upload instructions
      run: |
        cat > upload-instructions.txt << 'EOF'
        RentCredit AAB Upload Instructions
        ==================================
        
        1. Download the AAB file from artifacts
        2. Go to Google Play Console
        3. Select your app
        4. Go to Release > Production
        5. Create new release
        6. Upload the AAB file
        7. Complete the release process
        
        Package Name: com.rentcredit.app
        Version: ${{ github.event.inputs.release_version }}
        EOF
        
    - name: Upload instructions
      uses: actions/upload-artifact@v4
      with:
        name: upload-instructions
        path: upload-instructions.txt
