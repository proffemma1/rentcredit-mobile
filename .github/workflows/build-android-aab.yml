name: Build Android AAB - Working Solution

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'App version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Debug - Check repository structure
      run: |
        echo "=== Repository structure ==="
        ls -la
        echo "=== Public folder contents ==="
        ls -la public/ || echo "No public folder found"
        echo "=== Looking for icon files ==="
        find . -name "icon*.png" -type f | head -20
    
    - name: Create Android Project with Icons
      run: |
        # Create project structure
        mkdir -p android-app
        cd android-app
        
        # Create all necessary directories
        mkdir -p app/src/main/java/com/rentcredit/app
        mkdir -p app/src/main/res/values
        mkdir -p app/src/main/res/drawable
        mkdir -p app/src/main/res/mipmap-mdpi
        mkdir -p app/src/main/res/mipmap-hdpi
        mkdir -p app/src/main/res/mipmap-xhdpi
        mkdir -p app/src/main/res/mipmap-xxhdpi
        mkdir -p app/src/main/res/mipmap-xxxhdpi
        
        # Create the icons FIRST before anything else
        echo "=== Creating app icons ==="
        
        # Method 1: Try to use existing icons from repository
        if [ -f ../public/icon-192.png ]; then
            echo "Found icon-192.png, copying to all resolutions..."
            cp ../public/icon-192.png app/src/main/res/mipmap-mdpi/ic_launcher.png
            cp ../public/icon-192.png app/src/main/res/mipmap-hdpi/ic_launcher.png
            cp ../public/icon-192.png app/src/main/res/mipmap-xhdpi/ic_launcher.png
            cp ../public/icon-192.png app/src/main/res/mipmap-xxhdpi/ic_launcher.png
            cp ../public/icon-192.png app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
            echo "Icons copied successfully"
        else
            echo "No existing icons found, creating new ones..."
            
            # Method 2: Create icons using base64 encoded PNG
            # This is a small 48x48 purple square PNG encoded in base64
            ICON_BASE64="/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAwADADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5/ooooA+wP2T/ANkL9nv4r/s+6Frmu/C/wvqmrXqTefeTWAaWXbcSoMnPYKB+FfQX/DN/wI/6Jd4O/wDBAn+FfM/7AH7Ynw9+A/wC0nQ/FPiq00rVrWSeSSCWGZypM7spyhI5BBr6H/4bQ+BH/RUfB/8A4H/41jOlVlNtT/A9HD4jCQoxi6N2lrqzL/4Zv+BH/RLvB3/ggT/Cj/hm/wCBH/RLvB3/AIIE/wAK1P8AhtD4Ef8ARUfB/wD4H/40f8NofAj/AKKj4P8A/A//ABrP2VX/AJ/kdH1nCf8APj8WZf8Awzf8CP8Aol3g7/wQJ/hXzf8AtT/DT4e+Ff2h/Emm+GvBfhvRdMtjb+VbWWmxwxRZt4ycKoAGSTn8a+qP+G0PgR/0VHwf/wCB/wDjXw9+0j8T9D+K/wAaNa8Q6BqUOqaVeeT5VzCrqr7YY0bAYA8MpH4V0YenUjO8pX0OLG1aMqVo02nfrf8AI//Z"
            
            # Decode and save to all icon sizes
            echo "$ICON_BASE64" | base64 -d > app/src/main/res/mipmap-mdpi/ic_launcher.png
            echo "$ICON_BASE64" | base64 -d > app/src/main/res/mipmap-hdpi/ic_launcher.png
            echo "$ICON_BASE64" | base64 -d > app/src/main/res/mipmap-xhdpi/ic_launcher.png
            echo "$ICON_BASE64" | base64 -d > app/src/main/res/mipmap-xxhdpi/ic_launcher.png
            echo "$ICON_BASE64" | base64 -d > app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
            echo "Created fallback icons"
        fi
        
        # Verify icons exist
        echo "=== Verifying icon files ==="
        ls -la app/src/main/res/mipmap-*/ic_launcher.png
        
        # Create root build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.1.1'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        # Create settings.gradle
        echo 'rootProject.name = "RentCredit"' > settings.gradle
        echo 'include ":app"' >> settings.gradle
        
        # Create gradle.properties
        cat > gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx1536m
        android.useAndroidX=true
        android.enableJetifier=true
        EOF
        
        # Create local.properties
        echo "sdk.dir=/usr/local/lib/android/sdk" > local.properties
        
        # Create app/build.gradle
        cat > app/build.gradle << 'EOF'
        apply plugin: 'com.android.application'
        
        android {
            namespace 'com.rentcredit.app'
            compileSdk 34
            
            defaultConfig {
                applicationId "com.rentcredit.app"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "${{ github.event.inputs.release_version }}"
            }
            
            signingConfigs {
                release {
                    storeFile file("../keystore.jks")
                    storePassword "rentcredit2025"
                    keyAlias "rentcredit"
                    keyPassword "rentcredit2025"
                }
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    signingConfig signingConfigs.release
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'androidx.webkit:webkit:1.8.0'
        }
        EOF
        
        # Create MainActivity.java
        cat > app/src/main/java/com/rentcredit/app/MainActivity.java << 'EOF'
        package com.rentcredit.app;
        
        import android.os.Bundle;
        import android.webkit.WebSettings;
        import android.webkit.WebView;
        import android.webkit.WebViewClient;
        import androidx.appcompat.app.AppCompatActivity;
        
        public class MainActivity extends AppCompatActivity {
            private WebView webView;
            
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                
                webView = new WebView(this);
                setContentView(webView);
                
                WebSettings webSettings = webView.getSettings();
                webSettings.setJavaScriptEnabled(true);
                webSettings.setDomStorageEnabled(true);
                webSettings.setLoadWithOverviewMode(true);
                webSettings.setUseWideViewPort(true);
                webSettings.setBuiltInZoomControls(true);
                webSettings.setDisplayZoomControls(false);
                
                webView.setWebViewClient(new WebViewClient());
                webView.loadUrl("https://rentcredit.us");
            }
            
            @Override
            public void onBackPressed() {
                if (webView.canGoBack()) {
                    webView.goBack();
                } else {
                    super.onBackPressed();
                }
            }
        }
        EOF
        
        # Create AndroidManifest.xml
        cat > app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="RentCredit"
                android:theme="@style/Theme.AppCompat.Light.NoActionBar"
                android:usesCleartextTraffic="true">
                <activity
                    android:name=".MainActivity"
                    android:configChanges="orientation|screenSize"
                    android:exported="true">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # Final icon verification
        echo "=== Final icon check ==="
        find app/src/main/res -name "*.png" -type f
        
        # Generate keystore
        keytool -genkeypair -v \
          -keystore keystore.jks \
          -alias rentcredit \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -storepass rentcredit2025 \
          -keypass rentcredit2025 \
          -dname "CN=RentCredit, OU=Mobile, O=RentCredit, L=San Francisco, ST=CA, C=US" \
          -noprompt
    
    - name: Setup Gradle
      run: |
        cd android-app
        
        # Download gradle wrapper
        wget -q https://services.gradle.org/distributions/gradle-8.1.1-bin.zip
        unzip -q gradle-8.1.1-bin.zip
        
        # Create gradle wrapper
        mkdir -p gradle/wrapper
        gradle-8.1.1/bin/gradle wrapper --gradle-version 8.1.1
        
    - name: Build AAB
      run: |
        cd android-app
        
        # Make gradlew executable
        chmod +x gradlew
        
        # Clean and build
        ./gradlew clean
        ./gradlew bundleRelease --stacktrace
        
        # Show build results
        echo "=== Build Complete ==="
        find . -name "*.aab" -type f
        ls -la app/build/outputs/bundle/release/
        
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: RentCredit-${{ github.event.inputs.release_version }}.aab
        path: android-app/app/build/outputs/bundle/release/app-release.aab
        
    - name: Generate Upload Instructions
      run: |
        cat > PlayStore-Upload-Guide.md << 'EOF'
        # RentCredit Google Play Store Upload Guide
        
        ## App Bundle Details
        - **File**: RentCredit-${{ github.event.inputs.release_version }}.aab
        - **Package Name**: com.rentcredit.app
        - **Version**: ${{ github.event.inputs.release_version }}
        - **Target**: Android 5.0+ (API 21)
        
        ## Step-by-Step Upload Instructions
        
        ### 1. Download the AAB
        - Click on the "RentCredit-${{ github.event.inputs.release_version }}.aab" artifact
        - Download and extract the AAB file
        
        ### 2. Access Google Play Console
        - Go to https://play.google.com/console
        - Sign in with your developer account
        
        ### 3. Create New App (First Time)
        - Click "Create app"
        - App name: **RentCredit**
        - Default language: **English (United States)**
        - App or game: **App**
        - Free or paid: **Free**
        - Accept declarations and click "Create app"
        
        ### 4. App Store Listing
        Fill in these required fields:
        
        **App details:**
        - App name: RentCredit
        - Short description: Build credit with every rent payment
        - Full description:
          ```
          RentCredit transforms your monthly rent into credit-building opportunities. 
          
          Features:
          • Report rent payments to major credit bureaus
          • Connect with verified landlords
          • Track payment history
          • Monitor credit score improvements
          • Secure document uploads
          • Real-time payment verification
          
          Build your financial future, one rent payment at a time.
          ```
        
        **Graphics:**
        - App icon: Use the 512x512 icon from your assets
        - Feature graphic: 1024x500 banner
        - Screenshots: At least 2 phone screenshots
        
        **Categorization:**
        - Application type: Apps
        - Category: Finance
        - Tags: credit building, rent payments, financial services
        
        **Contact details:**
        - Email: support@rentcredit.us
        - Website: https://rentcredit.us
        
        ### 5. Upload AAB
        - Go to Release > Production
        - Click "Create new release"
        - Click "Upload" and select your AAB file
        - Fill in release notes
        - Click "Review release"
        - Click "Start rollout to Production"
        
        ### 6. Content Rating
        - Go to Policy > App content
        - Start questionnaire
        - Select: Financial Services
        - Answer all questions
        - Calculate rating
        
        ### 7. Pricing & Distribution
        - Select countries for distribution
        - Confirm app is free
        - Complete all declarations
        
        ### 8. Submit for Review
        - Review all sections for completion
        - Submit app for review
        - Review typically takes 2-3 hours
        
        ## Post-Submission
        - Monitor your email for updates
        - Check Play Console for review status
        - Once approved, app will be live on Google Play Store
        
        ## Support
        For issues, contact Google Play support or refer to:
        https://support.google.com/googleplay/android-developer
        EOF
        
    - name: Upload Instructions
      uses: actions/upload-artifact@v4
      with:
        name: PlayStore-Upload-Guide
        path: PlayStore-Upload-Guide.md
